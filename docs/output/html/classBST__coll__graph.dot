digraph "BST&lt; Comparable &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{BST\< Comparable \>\n||+ BST()\l+ BST()\l+ ~BST()\l+ findMin()\l+ findMax()\l+ find()\l+ isEmpty()\l+ printTree()\l+ makeEmpty()\l+ insert()\l+ remove()\l+ operator=()\l+ begin()\l+ end()\l+ insert()\l+ operator==()\l- elementAt()\l- insert()\l- remove()\l- findMin()\l- findMax()\l- find()\l- makeEmpty()\l- printTree()\l- clone()\l- isEqual()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -ITEM_NOT_FOUND" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{const Comparable\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -root" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{BinaryNode\< Comparable \> *\n||}",height=0.2,width=0.4,color="grey75",tooltip=" "];
}
